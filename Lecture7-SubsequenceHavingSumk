// Strivers Recursion playlist
// https://www.youtube.com/watch?v=eQCS_v3bw0Q&list=PLgUwDviBIf0rGlzIn_7rsaR2FQ5e6ZOL9&index=7
// Print Subsequences having sum k.

import java.util.*;

public class MyClass {
    static void subsK(int arr[], int sum, ArrayList<Integer> list, int idx, int s) {
        int n = arr.length;
        if(idx==n) {
            if(s==sum) {
                System.out.print(list);
                System.out.println();
            }
            return;
        }
        
        list.add(arr[idx]);
        s += arr[idx];    // Add the sum when you decide to take that element in the subsequence
        subsK(arr,sum,list,idx+1,s);
        s -= list.get(list.size()-1);   // Once you come back after the recursive call is executed, 
        // make sure to subtract that element from the sum in order to get the sum of next subsequence. // s -= arr[idx];
        list.remove(list.size()-1);
        subsK(arr,sum,list,idx+1,s);
    }
    
    public static void main(String args[]) {
      int arr[] = {1,2,1};
      int sum = 2;
      
      ArrayList<Integer> list = new ArrayList();
      subsK(arr,sum,list,0,0);
    }
}
